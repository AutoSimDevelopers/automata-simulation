@import 'bootstrap_variables';
//svg diagramm variables
//state Settings
$stateColor: #CCC;
$stateBorderWidth:2;
$stateBorderColor:#666;
$stateFontSize:15px;
$stateFontColor: #000;
//final state
$finalStateColor: #FFF;
$finalStateBorderColor: $stateBorderColor;
$finalStateBorderWidth:2;
//Hover
$stateHoverColor: #000;
$stateColorHoverOpacity:0.4;
$selectForAddTransitionColor:#F00;
//animated state for the simulation
$animatedCurrentStateColor:#ff7b00;
$animatedNextStateColor:#ff7b00;
//Transition Settings
$transitionColor: #000;
$transitionFontSize: 15px;
$transitionFontColor: #000;
$transitionWidth:2.5;
$transitionHoverColor:#AAA;
//animated transition
$animatedTransitionWidth:2.5;
$animatedTransitionColor:#ff7b00;
$animatedTransitionFontColor: #ff7b00;
//animated accepted and not accepted color
$animatedAcceptedColor:#00ff7b;
$animatedNotAcceptedColor:#aa2200;
//selected
$selectedColor:#00b7ff;
//svg diagramm
.automataWrapper {
    border: 1px solid #000;
}
#stateDiagramm {}
#diagramm {
    border: 1px solid #000;
    width: 100%;
    height: 500px;
    min-width: auto;
    position: relative;
}
#diagramm-buttons {
    position: absolute;
    z-index: 5;
}
#diagramm-svg {
    width: 100%;
    height: 100%;
    min-width: auto;
    position: absolute;
}
#state-context {
    //display:none;
    padding: 5px;
    position: absolute;
    right: 0px;
    width: auto;
    height: 100%;
    background-color: #888;
}
//normal arrow
#marker-end-arrow {
    fill: #000;
}
#marker-end-arrow-hover {
    fill: $transitionHoverColor;
}
#marker-end-arrow-selection {
    fill: $selectedColor;
}
//animated arrow for the simulation
#marker-end-arrow-animated {
    fill: $animatedTransitionColor;
}
//grid
.grid-line {
    stroke: $transitionColor;
}
//states
.state {
    cursor: context-menu;
}
.state:hover {
    cursor: pointer;
}
.state:hover .hover-circle {
    fill: $stateHoverColor;
    fill-opacity: $stateColorHoverOpacity;
}
.state-circle {
    fill: $stateColor;
    stroke: $stateBorderColor;
    stroke-width: $stateBorderWidth;
}
.selected-circle {
    fill: transparent;
    stroke: $selectedColor;
    stroke-width: 1;
    stroke-dasharray: 10, 10;
    visibility: hidden;
}
.active .selected-circle {
    visibility: visible;
}
.final-state {
    fill: $finalStateColor;
    stroke: $finalStateBorderColor;
    stroke-width: $finalStateBorderWidth;
}
.state-text {
    font-size: $stateFontSize;
}
//animated state for the simulation
//svg
.animated-currentstate-svg .state-circle {
    fill: $animatedCurrentStateColor;
}
.animated-nextstate-svg .state-circle {
    fill: $animatedNextStateColor;
}
.animated-accepted-svg .state-circle{
    fill:$animatedAcceptedColor;
}
.animated-not-accepted-svg .state-circle{
    fill:$animatedNotAcceptedColor;
}
//others
.animated-currentstate {
    color: $animatedCurrentStateColor;
}
.animated-nextstate {
    color:$animatedNextStateColor;
}
.animated-accepted{
    color:$animatedAcceptedColor;
}
.animated-not-accepted{
    color:$animatedNotAcceptedColor;
}
.selectedForTransition {
    color: $animatedNextStateColor;
}
.selectedForTransition {}
.state-text:hover {}
.in-creation {
    opacity: 0.5;
}
//Transition
.transition {
    stroke: $transitionColor;
    cursor: context-menu;
}
.transition:hover {
    cursor: pointer;
}
.transition-line-selection {
    stroke-width: $transitionWidth;
    stroke: $selectedColor;
    opacity: 0.6;
    visibility: hidden;
}
.transition.active .transition-line-selection {
    visibility: visible;
}
.transition-line {
    stroke-width: $transitionWidth;
}
.transition-line-hover {
    stroke-width: $transitionWidth;
    stroke: $transitionHoverColor;
    opacity: 0;
}
//transition line fill for the startline
.transition-line.start-line {
    stroke: $transitionColor;
}
//animated transition for the simulation
.animated-transition .transition-line {
    stroke: $animatedTransitionColor;
    stroke-width: $animatedTransitionWidth;
}
.animated-transition-text {
    stroke: $animatedTransitionColor;
    fill: $animatedTransitionColor;
}
.animated-transition {
    color: $animatedTransitionColor;
}
.transition-text {
    font-size: 15px;
    text-anchor: middle;
}
//ECT
#hidden-file-upload {
    display: none;
}
//GRID
.nopadding {
    padding: 0 !important;
    margin: 0 !important;
}

/*******
*Layout*
*******/
$disabledColor: #AAA;
.top-nav {
    height: 50px;
    background-color: white;
}
.top-menu {
    padding: 0 0 0 200px;
    height: 40px;
    background-color: whitesmoke;
    border-top: 1px solid #e0e0e0;
    border-bottom: 1px solid #e0e0e0;
}
.th-koeln-logo img {
    position: absolute;
    top: 0;
    right: 0;
    height: 50px;
}
.automata-simulation-logo{
    width:50px;
}
.automata-simulation-logo img{
    height:50px;
    width:50px;
}
//MENU
.left-menu {
    position: absolute;
    top: 90px;
    left: 0;
    bottom: 0;
    width: 200px;
    background-color: whitesmoke;
    border-right: 1px solid #e0e0e0;
}
.right-menu {
    position: absolute;
    top: 90px;
    right: 0;
    bottom: 0;
    width: 200px;
    background-color: whitesmoke;
    border-left: 1px solid #e0e0e0;
}
.menu-item {
    margin: 15px 0;
}
.menu-item .title,
.title {
    padding: 5px;
    background-color: #cedde9;
    cursor: pointer;
}
.menu-button {
    background-color: transparent;
    border: 1px solid whitesmoke;
    margin: 5px 1px;
}
.menu-button:hover {
    border: 1px solid #e0e0e0;
}
.button-group {
    padding: 0 5px;
    float: left;
    border-right: 1px solid #e0e0e0;
}
.menu-item .content {
    padding: 5px 10px;
}
.diagramm {
    position: absolute;
    left: 200px;
    right: 200px;
    top: 80px;
    bottom: 150px;
}
.bot-content-wrapper {
    position: absolute;
    background-color: whitesmoke;
    right: 200px;
    left: 200px;
    bottom: 0px;
    border-top: 1px solid #e0e0e0;
}
.bot-content {
    padding: 10px 10px 0 10px;
    height: 250px;
    overflow-y: scroll;
}
.bot-left {
    float: left;
    width: 50%;
    border-right: 1px solid #e0e0e0;
}
.bot-right {
    width: 50%;
    float: right;
}

button:disabled .icon{
    color:$disabledColor;
}
//TRANSITION MENU
.transitions-menu-list {
    padding: 0;
}
.transitions-menu-list li {
    list-style-type: none;
}
.icon {
    font-size: 18px;
}
//design is not ready!
input[type='text'] {
    font-size: 24px;
    border: 0;
}
.currentAutomatonName {
    float:left;
    font-size: 24px;
    max-width: 100%;
    cursor: pointer;
}
.inputField {
    z-index: 1;
}

.ui-slider-handle{
    cursor:pointer !important;
}
.dropdown li a{
    cursor:pointer;
}
.icon-check {
    color: limegreen;
}
.icon-times {
    color: red;
}
